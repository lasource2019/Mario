import pygame
import time

background = pygame.image.load('Background2.jpg')
platformimg = pygame.image.load('platform.png')
# on importe les images pour notre peronnages principal
walkRight = [pygame.image.load('Reverseyolo.png'), pygame.image.load('Ralkingyolo1.png'),
             pygame.image.load('Ralkingyolo2.png'), pygame.image.load('Ralkingyolo3.png'),
             pygame.image.load('Ralkingyolo4.png')]
# images pour l'animation de marche à droite
walkLeft = [pygame.image.load('Pizzayolo.png'), pygame.image.load('Walkingyolo1.png'),
            pygame.image.load('Walkingyolo2.png'), pygame.image.load('Walkingyolo3.png'),
            pygame.image.load('Walkingyolo4.png')]
# images pour l'animation de marche à gauche

img = pygame.image.load('Pizzayolo.png')
imgmechant = pygame.image.load('Mechantyolo.png')
imgprincesse = pygame.image.load('Princesse.png')
# image du personnage à l'arrêt
blue = (113, 177, 227)
white = (255, 255, 255)
red = (227, 10, 150)

clock = pygame.time.Clock()
# variable permettant de changer le temps

pygame.init()

font = pygame.font.Font(None, 100)

surfaceW = 1275
surfaceH = 600
# on definit la longeur et largeur de la fenêtre

surface = pygame.display.set_mode((surfaceW, surfaceH))
# on creer une fenêtre

pygame.display.set_caption("JEU bastien Antoine Briac")


# on rassemble toutes les variables associées aux caractèristiques du personnage
class player(object):
    def __init__(self, x, y, width, height):
        self.x = x
        self.y = y
        self.height = height
        self.width = width
        self.vel = 5
        self.isJump = False
        self.jumpCount = 13
        self.right = False
        self.left = False
        self.walkCount = 0
        self.hitbox = (self.x + 20, self.y + 10, 60, 90)
        # variables assosciées aux caractéristiques du personnage

    def mouvement(self, surface):
        if keys [pygame.K_RIGHT]:
            self.left = True
            self.right = False
        elif keys[pygame.K_LEFT]:
            self.right = True
            self.left = False
        else:
            self.right = False
            self.left = False
            self.walkCount = 0
# on choisi le nombre d'images de l'animation à mettre par pas.
        if pizzayolo.walkCount + 1 >= 25:
            pizzayolo.walkCount = 0

        if pizzayolo.left:
            surface.blit(walkLeft[pizzayolo.walkCount // 5], (pizzayolo.x, pizzayolo.y))
            pizzayolo.walkCount += 1
        elif pizzayolo.right:
            surface.blit(walkRight[pizzayolo.walkCount // 5], (pizzayolo.x, pizzayolo.y))
            pizzayolo.walkCount += 1
        else:
            surface.blit(img, (pizzayolo.x, pizzayolo.y))
            pizzayolo.walkCount = 0
        self.hitbox = (self.x + 20, self.y + 10, 60, 90)
        pygame.draw.rect(surface, white, self.hitbox, 2)
# on définit les mouvements du personnage et on appelle les images pour l'animation

class ennemie(object):
    def __init__(self, x, y, height, width):
        self.x = x
        self.y = y
        self.height = height
        self.width = width
        self.walkcount = 0
        self.vel = 10
        self.hitbox = (self.x + 20, self.y + 10, 60, 90)
        pygame.draw.rect(surface, white, self.hitbox, 2)
#variables associées aux caractéristiques de l'ennemi

    def bouger (self, surface):
        if keys[pygame.K_RIGHT]:
            self.x -= self.vel
        elif keys[pygame.K_LEFT]:
            self.x += self.vel
        self.hitbox = (self.x + 20, self.y + 10, 60, 90)
        pygame.draw.rect(surface, white, self.hitbox, 2)
        surface.blit(imgmechant, (self.x, self.y))

class princesse(object):
    def __init__(self, x, y , height, width):
        self.x = x
        self.y = y
        self.height = height
        self.width = width
        self.vel = 10
        self.hitbox = (self.x, self.y, 120, 120)
        pygame.draw.rect(surface, white, self.hitbox, 2)
#variables associées aux caractéristiques de l'ennemi

    def existe(self, surface):
        if keys[pygame.K_RIGHT]:
            self.x -= self.vel
        elif keys[pygame.K_LEFT]:
            self.x += self.vel
        self.hitbox = (self.x, self.y + 10, 120, 120)
        surface.blit(imgprincesse, (self.x, self.y))
        pygame.draw.rect(surface, white, self.hitbox, 2)



class platform(object):
    def __init__(self, x, y, height, width):
        self.x = x
        self.y = y
        self.height = height
        self.width = width
        self.vel = 10
        self.hitbox = (self.x, self.y, 300, 10)

    def existance(self, surface):
# permet de faire bouger le personnage et l'empèche de sortir de l'écran
        if keys[pygame.K_RIGHT]:
            self.x -= self.vel
        elif keys[pygame.K_LEFT]:
            self.x += self.vel
        self.hitbox = (self.x, self.y, 300, 10)
        pygame.draw.rect(surface, red, self.hitbox, 2)
        surface.blit(platformimg, (self.x, self.y))

#on essaye d'afficher du texte

def message(msg, color):
    screentext = font.render(msg, True, color)
    surface.blit(screentext, (300, 300))
    pygame.display.update()


def personnage():
    pizzayolo.mouvement(surface)
    plateforme1.existance(surface)
    plateforme2.existance(surface)
    plateforme3.existance(surface)
    plateforme4.existance(surface)
    plateforme5.existance(surface)
    plateforme6.existance(surface)
    plateforme7.existance(surface)
    plateforme8.existance(surface)
    plateforme9.existance(surface)
    mechantyolo1.bouger(surface)
    mechantyolo2.bouger(surface)
    mechantyolo3.bouger(surface)
    mechantyolo4.bouger(surface)
    mechantyolo5.bouger(surface)
    mechantyolo6.bouger(surface)
    pizzareine.existe(surface)
    pygame.display.update()

# on ajoute le personnage au jeu


# Moteur du jeu
game_over = False
pizzayolo = player(150, 200, 32, 32)
mechantyolo1 = ennemie(80, 300, 32, 32)
mechantyolo2 = ennemie(500, 150, 32, 32)
mechantyolo3 = ennemie(1350, 300, 32, 32)
mechantyolo4 = ennemie(1550, 400, 32, 32)
mechantyolo5 = ennemie(2450, 0, 32, 32)
mechantyolo6 = ennemie(3100, 300, 32, 32)
plateforme1 = platform(50, 400, 10, 300)
plateforme2 = platform(450, 250, 10, 300)
plateforme3 = platform(800, 500, 10, 300)
plateforme4 = platform(1300, 400, 10, 300)
plateforme5 = platform(1500, 500, 10, 300)
plateforme6 = platform(1700, 300, 10, 300)
plateforme7 = platform(2000, 300, 10, 300)
plateforme8 = platform(2400, 100, 10, 300)
plateforme9 = platform(3000, 400, 10, 300)
pizzareine = princesse(5000, 400, 32, 32)


while not game_over:
    clock.tick(50)
# permet de ralentir le jeu
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True

# Definir la gravité
    gravity = 10
    pizzayolo.y += gravity
# permet de prendre en compte l'utilisation des touches sur le clavier
    keys = pygame.key.get_pressed()

    if not (pizzayolo.isJump):

# permet au personnage de sauter

        if keys[pygame.K_SPACE]:
            pizzayolo.isJump = True
            pizzayolo.right = True
            pizzayolo.left = True
            pizzayolo.walkCount = True
    else:
        if pizzayolo.jumpCount >= -12:
            neg = 1
            if pizzayolo.jumpCount < 0:
                neg = -1
            pizzayolo.y -= (pizzayolo.jumpCount ** 2) * 0.5 * neg
            pizzayolo.jumpCount -= 1
        else:
            pizzayolo.isJump = False
            pizzayolo.jumpCount = 13


#on va essyer de faire fonctionner les hitbox ok
    if (plateforme1.y-10 >= pizzayolo.y >= plateforme1.y-100) and (plateforme1.x+280 >= pizzayolo.x >= plateforme1.x-85):
        pizzayolo.y = plateforme1.y-100
    if (plateforme2.y-10 > pizzayolo.y > plateforme2.y-100) and (plateforme2.x+280 >= pizzayolo.x >= plateforme2.x-85):
        pizzayolo.y = plateforme2.y-100
    if (plateforme3.y-10 > pizzayolo.y > plateforme3.y-100) and (plateforme3.x+280 >= pizzayolo.x >= plateforme3.x-85):
        pizzayolo.y = plateforme3.y-100
    if (plateforme4.y-10 >= pizzayolo.y >= plateforme4.y-100) and (plateforme4.x+280 >= pizzayolo.x >= plateforme4.x-85):
        pizzayolo.y = plateforme4.y-100
    if (plateforme5.y-10 >= pizzayolo.y >= plateforme5.y-100) and (plateforme5.x+280 >= pizzayolo.x >= plateforme5.x-85):
        pizzayolo.y = plateforme5.y-100
    if (plateforme6.y-10 > pizzayolo.y > plateforme6.y-100) and (plateforme6.x+280 >= pizzayolo.x >= plateforme6.x-85):
        pizzayolo.y = plateforme6.y-100
    if (plateforme7.y-10 > pizzayolo.y > plateforme7.y-100) and (plateforme7.x+280 >= pizzayolo.x >= plateforme7.x-85):
        pizzayolo.y = plateforme7.y-100
    if (plateforme8.y-10 >= pizzayolo.y >= plateforme8.y-100) and (plateforme8.x+280 >= pizzayolo.x >= plateforme8.x-85):
        pizzayolo.y = plateforme8.y-100
    if (plateforme9.y-10 >= pizzayolo.y >= plateforme9.y-100) and (plateforme9.x+280 >= pizzayolo.x >= plateforme9.x-85):
        pizzayolo.y = plateforme9.y-100

    if pizzayolo.y >= 700:
        message('Perdu', red)
        time.sleep(2)
        pizzayolo = player(150, 200, 32, 32)
        mechantyolo1 = ennemie(80, 300, 32, 32)
        mechantyolo2 = ennemie(500, 150, 32, 32)
        mechantyolo3 = ennemie(1350, 300, 32, 32)
        mechantyolo4 = ennemie(1550, 400, 32, 32)
        mechantyolo5 = ennemie(2240, 100, 32, 32)
        mechantyolo6 = ennemie(2450, 0, 32, 32)
        plateforme1 = platform(50, 400, 10, 300)
        plateforme2 = platform(450, 250, 10, 300)
        plateforme3 = platform(800, 500, 10, 300)
        plateforme4 = platform(1300, 400, 10, 300)
        plateforme5 = platform(1500, 500, 10, 300)
        plateforme6 = platform(1700, 300, 10, 300)
        plateforme7 = platform(2000, 300, 10, 300)
        plateforme8 = platform(2200, 200, 10, 300)
        plateforme9 = platform(2400, 100, 10, 300)
        pizzareine = princesse(2700, 100, 32, 32)

    #on fait marcher les hitbox ennemies
    if (mechantyolo1.y >= pizzayolo.y >= mechantyolo1.y-100) and (mechantyolo1.x+50 >= pizzayolo.x >= mechantyolo1.x-25):
        game_over = True
    if (mechantyolo2.y >= pizzayolo.y >= mechantyolo2.y-100) and (mechantyolo2.x+50 >= pizzayolo.x >= mechantyolo2.x-25):
        game_over = True
    if pizzayolo.hitbox == mechantyolo3.hitbox:
        game_over = True
    if pizzayolo.hitbox == mechantyolo4.hitbox:
        game_over = True
    if pizzayolo.hitbox == mechantyolo5.hitbox:
        game_over = True
    if pizzayolo.hitbox == mechantyolo6.hitbox:
        game_over = True
#platform mobile verticalement
    plateforme3.y -=5
    if plateforme3.y == 0:
        plateforme3.y = 700
#plateform piège
    if (plateforme4.y - 10 >= pizzayolo.y >= plateforme4.y - 100) and (plateforme4.x + 280 >= pizzayolo.x >= plateforme4.x - 85):
        plateforme4.y += 40
# Faire marcher la reine
    if (pizzareine.y-10 >= pizzayolo.y >= pizzareine.y-100) and (pizzareine.x+280 >= pizzayolo.x >= pizzareine.x-85):
        message('bravo', red)
        time.sleep(2)
        game_over = True
# faire marcher le saut sur la tête des ennemies


    surface.fill(blue)
    personnage()
message('Merci', red)
time.sleep(2)
pygame.quit()
quit()
